{"version":3,"file":"commands.js","mappings":"AAOAA,OAAOC,SAAQ,WACb,IAkCFD,OAAOE,QAAQC,UAAU,uBAAwBC","sources":["webpack://office-addin-taskpane-js/./src/commands/commands.js"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global Office */\n\nOffice.onReady(() => {\n  // If needed, Office.js is ready to be called.\n});\n\nasync function highlightSelection(event) {\n\n  // Implement your custom code here. The following code is a simple Excel example.  \n  try {\n    await Excel.run(async (context) => {\n    /** Ajuster la mise en page de la feuille */\n    let selectedSheet = context.workbook.worksheets.getActiveWorksheet();\n\n    // Set print area for selectedSheet to range \"A:K\"\n    selectedSheet.pageLayout.setPrintArea(\"A:K\");\n    // Set ExcelScript.PageOrientation.landscape orientation for selectedSheet\n    selectedSheet.pageLayout.orientation = Excel.PageOrientation.landscape;\n    // Répéter seulement la rangée 5 sur toutes les pages\n    selectedSheet.pageLayout.setPrintTitleRows(\"$5:$5\");\n    // Set Letter paperSize for selectedSheet\n    selectedSheet.pageLayout.paperSize = Excel.PaperType[\"letter\"];\n    // Set FitAllColumnsOnOnePage scaling for selectedSheet\n    selectedSheet.pageLayout.zoom = { horizontalFitToPages: 1, verticalFitToPages: 0, scale: null };\n\n    await context.sync();\n    });\n    } catch (error) {\n        // Note: In a production add-in, notify the user through your add-in's UI.\n        console.error(error);\n    }\n\n  // Calling event.completed is required. event.completed lets the platform know that processing has completed.\n  event.completed();\n}\n\n// Register the function with Office.\nOffice.actions.associate(\"futFormatPaFourListe\", futFormatPaFourListe);\n"],"names":["Office","onReady","actions","associate","futFormatPaFourListe"],"sourceRoot":""}